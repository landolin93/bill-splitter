document.addEventListener('DOMContentLoaded', () => {
    const form = document.getElementById('billForm');
    const addPersonBtn = document.getElementById('addPerson');
    const peopleInputs = document.getElementById('peopleInputs');
    const resultsDiv = document.getElementById('results');
    const resultBody = document.getElementById('resultBody');
    const resetBtn = document.getElementById('resetBtn');
    let personCount = 0;

    // Initialize with one person
    addPerson();

    // Add person
    addPersonBtn.addEventListener('click', addPerson);

    function addPerson() {
        personCount++;
        const div = document.createElement('div');
        div.className = 'person-input';
        div.setAttribute('data-person-id', personCount);
        div.innerHTML = `
            <div class="person-input-header">
                <input type="text" class="person-name" placeholder="Name" required>
                <button type="button" class="remove-btn">Remove Person</button>
            </div>
            <div class="person-items">
                <div class="item-input">
                    <input type="number" class="item-cost" step="0.01" min="0" placeholder="Item Cost ($)" required>
                    <button type="button" class="remove-item-btn">Remove Item</button>
                </div>
            </div>
            <button type="button" class="add-item-btn">Add Item</button>
        `;
        peopleInputs.appendChild(div);

        // Remove person
        div.querySelector('.remove-btn').addEventListener('click', () => {
            if (personCount > 1) {
                div.remove();
                personCount--;
            } else {
                alert('At least one person is required.');
            }
        });

        // Add item
        div.querySelector('.add-item-btn').addEventListener('click', () => {
            const itemDiv = document.createElement('div');
            itemDiv.className = 'item-input';
            itemDiv.innerHTML = `
                <input type="number" class="item-cost" step="0.01" min="0" placeholder="Item Cost ($)" required>
                <button type="button" class="remove-item-btn">Remove Item</button>
            `;
            div.querySelector('.person-items').appendChild(itemDiv);

            // Remove item
            itemDiv.querySelector('.remove-item-btn').addEventListener('click', () => {
                const items = div.querySelectorAll('.item-input');
                if (items.length > 1) {
                    itemDiv.remove();
                } else {
                    alert('Each person must have at least one item.');
                }
            });
        });

        // Remove first item (initially one item per person)
        div.querySelector('.remove-item-btn').addEventListener('click', () => {
            const items = div.querySelectorAll('.item-input');
            if (items.length > 1) {
                div.querySelector('.item-input').remove();
            } else {
                alert('Each person must have at least one item.');
            }
        });
    }

    // Form submission
    form.addEventListener('submit', (e) => {
        e.preventDefault();

        // Get inputs
        const totalBill = parseFloat(document.getElementById('totalBill').value);
        const taxAmount = parseFloat(document.getElementById('taxAmount').value);
        const tipPercent = parseFloat(document.getElementById('tipPercent').value);
        const people = Array.from(peopleInputs.querySelectorAll('.person-input')).map(div => {
            const name = div.querySelector('.person-name').value;
            const itemCosts = Array.from(div.querySelectorAll('.item-cost')).map(input => parseFloat(input.value));
            return { name, itemCosts };
        });

        // Validate inputs
        if (isNaN(totalBill) || isNaN(taxAmount) || isNaN(tipPercent) || people.some(p => !p.name || p.itemCosts.some(c => isNaN(c) || c < 0))) {
            alert('Please fill all fields correctly with non-negative values.');
            return;
        }

        // Calculate
        const tipAmount = totalBill * (tipPercent / 100);
        const totalMealCost = people.reduce((sum, p) => sum + p.itemCosts.reduce((s, c) => s + c, 0), 0);

        if (totalMealCost === 0) {
            alert('Total meal cost cannot be zero.');
            return;
        }

        // Clear previous results
        resultBody.innerHTML = '';

        // Calculate and display results
        people.forEach(person => {
            const mealCost = person.itemCosts.reduce((sum, cost) => sum + cost, 0);
            const taxShare = (mealCost / totalMealCost) * taxAmount;
            const tipShare = (mealCost / totalMealCost) * tipAmount;
            const totalPerPerson = mealCost + taxShare + tipShare;

            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${person.name}</td>
                <td>${mealCost.toFixed(2)}</td>
                <td>${taxShare.toFixed(2)}</td>
                <td>${tipShare.toFixed(2)}</td>
                <td>${totalPerPerson.toFixed(2)}</td>
            `;
            resultBody.appendChild(row);
        });

        resultsDiv.classList.remove('hidden');
    });

    // Reset button
    resetBtn.addEventListener('click', () => {
        form.reset();
        peopleInputs.innerHTML = '';
        personCount = 0;
        addPerson();
        resultsDiv.classList.add('hidden');
        resultBody.innerHTML = '';
    });

    // Collapsible sections
    document.querySelectorAll('.toggle-btn').forEach(btn => {
        btn.addEventListener('click', () => {
            const targetId = btn.getAttribute('data-target');
            const target = document.getElementById(targetId);
            target.classList.toggle('collapsed');
            btn.textContent = target.classList.contains('collapsed') ? '▶' : '▼';
        });
    });
});
